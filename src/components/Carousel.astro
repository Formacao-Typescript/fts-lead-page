---
interface Props {
  id: string;
  items: { src: string }[];
}

const { id, items } = Astro.props;
---

<div class="carousel-container">
	<div id={id} class="glide">
		<div class="glide__track" data-glide-el="track">
			<ul class="glide__slides">
				{items.map(item => (
          <li class="glide__slide">
            <img src={item.src} />
          </li>
        ))}
			</ul>
		</div>
		<div class="glide__arrows" data-glide-el="controls">
			<button class="glide__arrow glide__arrow--left" data-glide-dir="<">
        <i class="fa-solid fa-chevron-left"></i>
      </button>
			<button class="glide__arrow glide__arrow--right" data-glide-dir=">">
        <i class="fa-solid fa-chevron-right"></i>
      </button>
		</div>
	</div>
	
</div>
<style lang="scss">

.carousel-container {
	display: flex;
  position: relative;
  width: 500px;

  @media(max-width: 480px) {
    width: 300px;
  }

  .glide__slides {
    img {
      width: 100%;
      // height: 400px;
      object-fit: fit;
    }
  }

  .glide__arrows {
    cursor: pointer;
    position: absolute;
    top: 50%;
    left: 0;
    right: 0;
    display: flex;
    justify-content: space-between;
    transform: translateY(-50%);

    button {
      background: transparent;
      width: 150px;
      height: 300px;
      border: none;
      color: white;
      font-size: 2rem;
      padding: 1rem;
      cursor: pointer;
      transition: background 0.3s;
      &:hover {
        color: var(--accent-blue);
      }
    }

    .glide__arrow {
      display: flex;
      align-items: center;
      
      &--left {
        justify-content: flex-start;
        &:hover {
          background: radial-gradient(circle at left,rgb(0, 173, 202, 0.3), transparent 70%);
        }
      }
      &--right {
        justify-content: flex-end;
        &:hover {
          background: radial-gradient(circle at right, rgb(0, 173, 202, 0.3), transparent 70%);
        }
      }
    }

  }
}

</style>
<!-- <script src="node_modules/@glidejs/glide/dist/glide.min.js"></script> -->
<script>
	import Glide, { Controls, Autoplay } from '@glidejs/glide/dist/glide.modular.esm';
	// new Glide('#testimonials-carousel').mount();
	// new Glide('#socialproof-carousel').mount();

  // FIXME: '.glide' selector only works for the first, and using the Astro.props.id doesn't work 
  // even as a data-attribute , so there's no way of identifying the carousel properly
  // a solution would be moving the glide import to the main layout, buuut
  // since the project is small, keeping the logic into the main component doesn't seem like a bad idea
  
  new Glide('#testimonials-carousel', {
    type: 'carousel',  // Or 'slider' 
    startAt: 0,        
    perView: 1,        
    autoplay: 7000,    
    hoverpause: true   
  }).mount({ Controls, Autoplay });

  new Glide('#socialproof-carousel', {
    type: 'carousel',  // Or 'slider' 
    startAt: 0,        
    perView: 1,        
    autoplay: 10_000,  
    hoverpause: true   
  }).mount({ Controls, Autoplay });
  
</script>
